Objetivo
Necesitamos encontrar una forma de evitar que nuestro proyecto se rompa cuando movamos de lugar un archivo dentro del proyecto, para esto usaremos Referencias Relativas.

Implementación
Usando PyProjRoot:

import pyprojroot

pyprojroot.here()  # Esto es un Posix Path (pathlib)
pyprojroot.here().joinpath("data", "raw") 
El path en pyprojroot se construye desde la raíz, no desde el path del archivo que lo ejecuta.
Puedes mover el archivo a cualquier parte de la carpeta del proyecto, pero los paths no se romperán.
Usando PyHere:

import pyhere

pyhere.here()  # También regresa un Posix Path
El directorio que regresa es el directorio padre del directorio actual.
Comparación
Estas dos líneas de código regresan el mismo resultado:

pyprojroot.here("data").joinpath("raw")
pyhere.here().resolve() / "data" / "raw"
Estas dos librerías sirven para crear shortcuts. Para esto, se puede usar la siguiente función:
def make_dir_function(dir_name):
    def dir_function(*args):
        return pyprojroot.here()joinpath(dir_name, *args)
    return dir_function


data_dir = make_dir_function("data")
data_dir("raw", "pathlib")  # Devuelve el path personalizado
Puedes crear la cantidad de shortcuts que tu proyecto necesite.


Crear referencias relativas de archivos
Las referencias relativas evitan que el proyecto se rompa cuando movemos de lugar un archivo dentro del mismo

Usando pyprojroot

Mostrar la ruta principal del proyecto
import pyprojroot
#ruta actual del proyecto
pyprojroot.here()
Ir a la carpeta raw
# Ir a raw
pyprojroot.here().joinpath("curso-entorno-avanzado-ds-manejo-rutas", "data", "raw")
Usando pyhere

Ruta de la carpeta actual
import pyhere
pyhere.here()
# Los n veces dos puntos indica que la raiz del proyecto esta n pasos hacia atras
Mostrar ruta principal del proyecto
pyhere.here().resolve()
Ir a la carpeta raw
# ir a raw
pyhere.here().resolve() / "curso-entorno-avanzado-ds-manejo-rutas" / "data" / "raw"
Creando shorcut

Funcion que permite ir a la ruta especificada
def make_dir_function(dir_name):
    
    def dir_function(*args):
        return pyprojroot.here().joinpath(dir_name, *args)

    return dir_function
Colocar la carpeta data como raiz principal
data_dir = make_dir_function("curso-entorno-avanzado-ds-manejo-rutas/data")
# verifica si el archivo .gitkeep existe en la ruta espeficicada
data_dir("raw", ".gitkeep").exists()
Colocar la carpeta notebooks como raiz principal
data_dir = make_dir_function("curso-entorno-avanzado-ds-manejo-rutas/notebooks")
# verifica si el archivo un notebooks existe en la ruta espeficicada
notebooks_dir("0.0-paths_management_platzi-introduction.ipynb").exists()
Responder