#
import pathlib
#
CURRENT_DIR = pathlib.Path(".").resolve()
print(type(CURRENT_DIR))

DATA_DIR = CURRENT_DIR.parent.joinpath("data") # CURRENT_DIR.parent / "data"
print(DATA_DIR)
print(DATA_DIR.exists())
print(DATA_DIR.is_dir())
#
DATA_DIR.joinpath("external_pathlib", "pathlib", "nested").mkdir(parents=True, exist_ok=True)
#
list(DATA_DIR.glob("*"))



Crear la ruta “./data/raw/” independiente del sistema operativo. Ahora usaremos pathlib, otro módulo de Python.

Implementación
Dentro del notebook de jupyter:

import pathlib

pathlib.Path()  # Genera un objeto Unix Path o 

CURRENT_DIR = pathlib.Path().resolve()  # Path local completo
DATA_DIR = CURRENT_DIR.parent.joinpath("data", "raw")  # Directorio objetivo

DATA_DIR.exists()  # Revisa si el directorio existe
DATA_DIR.is_dir()  # Revisa si es un directorio
Utiliza el método “parent” para obtener el directorio padre y de ahí concatenar el path de las carpetas “data” y “raw”.

Puedes crear una carpeta dentro de un directorio, usando el método “mkdir”:

DATA_DIR.joinpath("<nombre_carpeta>").mkdir()
Para buscar la ruta de un archivo dentro del proyecto, usando regex:

list(DATA_DIR.glob("<nombre_archivo>"))